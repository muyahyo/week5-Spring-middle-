JWT강의와 인증, 인가 관련 강의 재시청 필요함(강의에서 나오는 코드 중에서 내게 필요한 코드가 무엇인지 다시 확인할 것)
ERD관련 확인 필요함(팀원들과 공유하여 틀린 부분이 있는지, 만약 틀렸다면 어떤 부분을 이해를 잘못 했는지 확인이 필요함)
코드 흐름 분석해볼 것(코드에 적혀있는 것들이 어떻게 흘러가는지, 데이터 값은 어떻게 이동하고, 어떻게 불러오는지 확인필요)
만약 시간이 남는다면 LV2 바로 도전해볼 것 
식사시간에 혼공자 교재 챕터 1~7강까지 다시 한 번 훑어보기(부족한 부분 위주로, 생성자, 메소드 다시 보기)

매니저님 숙제?
문제 : @xxxMapping("/api/xxx") 일 때에 /api 생략하는 방법 찾기
답 : @RequestMapping 사용
     @RequestMapping란? 요청 URL을 어떤 method가 처리할지 mapping해주는 Annotation이다. Controller나 Controller의 method에 적용한다.
     요청을 받는 형식인 GET, POST, PATCH, PUT, DELETE 를 정의하기도 한다. 요청 받는 형식을 정의하지 않는다면, 자동적으로 GET으로 설정된다.
     
     예)
     @Controller
     // 1) Class Level
     //모든 메서드에 적용되는 경우 “/home”로 들어오는 모든 요청에 대한 처리를 해당 클래스에서 한다는 것을 의미
     @RequestMapping("/home") 
     public class HomeController {
     /* an HTTP GET for /home */ 
     @RequestMapping(method = RequestMethod.GET)
     public String getAllEmployees(Model model) {
        ...
     }
     /*
     
     2) Handler Level
     요청 url에 대해 해당 메서드에서 처리해야 되는 경우
     “/home/employees” POST 요청에 대한 처리를 addEmployee()에서 한다는 것을 의미한다.
     value: 해당 url로 요청이 들어오면 이 메서드가 수행된다.
     method: 요청 method를 명시한다. 없으면 모든 http method 형식에 대해 수행된다.
     */
     /* an HTTP POST for /home/employees */ 
     @RequestMapping(value = "/employees", method = RequestMethod.POST) 
     public String addEmployee(Employee employee) {
          }
     
     
